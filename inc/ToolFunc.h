/************************************************************
Copyright (C) 深圳英可瑞科技开发有限公司
文 件 名：ToolFunc.h
版    本：1.00
创建日期：2020-09-10
作    者：郭数理
功能描述：工具函数头文件，实现互斥信号量，休眠等函数

函数列表：

修改记录：
	作者      日期          版本       修改内容
	郭数理     2020-09-10  1.00     创建
**************************************************************/

#ifndef __TOOL_FUNC_H_
#define __TOOL_FUNC_H_

#ifdef __cplusplus
extern "C" {
#endif


#include <sys/types.h>
#include "Type.h"


/*************************************************************
函数名称: inc_mutex_sem_delete
函数功能: 删除互斥信号量
输入参数: sem_id -- 信号量标识符
输出参数: 无
返回值  ：无
**************************************************************/
void inc_mutex_sem_delete(int sem_id);


/*************************************************************
函数名称: inc_mutex_sem_create
函数功能: 创建互斥信号量
输入参数: key -- 关键字
输出参数: 无
返回值  ：信号量ID，错误返-1
**************************************************************/
int inc_mutex_sem_create(key_t key);


/*************************************************************
函数名称: inc_mutex_sem_open
函数功能: 获取其它进程创建的互斥信号量
输入参数: key -- 关键字
输出参数: 无
返回值  ：信号量ID，错误返-1
**************************************************************/
int inc_mutex_sem_open(key_t key);


/*************************************************************
函数名称: inc_mutex_sem_p
函数功能: 等待互斥信号量
输入参数: sem_id -- 信号量标识符
输出参数: 无
返回值  ：信号量ID，错误返-1
**************************************************************/
int inc_mutex_sem_p(int sem_id);


/*************************************************************
函数名称: inc_mutex_sem_v
函数功能: 释放互斥信号量
输入参数: sem_id -- 信号量标识符
输出参数: 无
返回值  ：信号量ID，错误返-1
**************************************************************/
int inc_mutex_sem_v(int sem_id);


/*************************************************************
函数名称: inc_shm_create
函数功能: 创建共享内存
输入参数: key      -- 关键字
          size -- 内存的大小
输出参数: 无
返回值  ：共享内存ID，错误返-1
**************************************************************/
int inc_shm_create(key_t key, int size);


/*************************************************************
函数名称: inc_shm_open
函数功能: 获取其它进程创建共享内存
输入参数: key      -- 关键字
          size -- 内存的大小
输出参数: 无
返回值  ：共享内存ID，错误返-1
**************************************************************/
int inc_shm_open(key_t key, int size);


/*************************************************************
函数名称: inc_shm_at
函数功能: 关联共享内存
输入参数: shm_id     -- 共享内存标识符
输出参数: 无
返回值  ：成功则返回指向共享内存段的地址，错误返-1
**************************************************************/
void *inc_shm_at(int shm_id);


/*************************************************************
函数名称: inc_shm_at
函数功能: 关联共享内存
输入参数: shm_id     -- 共享内存标识符
输出参数: 无
返回值  ：成功则返回指向共享内存段的地址，错误返NULL
**************************************************************/
void *inc_shm_at(int shm_id);


/*************************************************************
函数名称: inc_shm_delete
函数功能: 删除共享内存
输入参数: shm_id     -- 共享内存标识符
输出参数: 无
返回值  ：无
**************************************************************/
void inc_shm_delete(int shm_id);


/*************************************************************
函数名称: inc_time_usleep
函数功能: 休眠函数
输入参数: us -- 休眠时间值，单位微秒
输出参数: 无
返回值  ：正常返回0，被信号中断返回-1
**************************************************************/
int inc_time_usleep(unsigned int us);


/*************************************************************
函数名称: inc_second_to_time_string
函数功能: 将秒数转换为时间字符串
输入参数: second   -- 自1970-01-01 00:00:00 UTC以来的秒数
输出参数: pu8_time -- 时间字符串，格式"2010-11-15 10:39:30"，本地时区，此缓冲区至少20个字节
返回值  ：无
**************************************************************/
void inc_second_to_time_string(U8_T *pu8_time, time_t second);


/*************************************************************
函数名称: inc_time_string_to_second
函数功能: 将时间字符串转换为秒数
输入参数: pu8_time -- 时间字符串，格式"2010-11-15 10:39:30"，本地时区
输出参数: 无
返回值  ：自1970-01-01 00:00:00 UTC以来的秒数
**************************************************************/
time_t inc_time_string_to_second(U8_T *pu8_time);


/*************************************************************
函数名称: u32_inc_calculate_diff_time_ms
函数功能: 计算时间差
输入参数: pt_last_second          -- 上一次时间
输出参数: 无
返回值  ：时间差值，单位ms
**************************************************************/
U32_T u32_inc_calculate_diff_time_ms(struct timespec *pt_last_time);


/*************************************************************
函数名称: v_inc_update_remaining_time
函数功能: 更新剩余时间
输入参数: pt_last_second          -- 上一次时间
输出参数: pu32_remaining_time     -- 余下的时间
返回值  ：无
**************************************************************/
void v_inc_update_remaining_time(struct timespec *pt_last_time, U32_T *pu32_remaining_time);


/*************************************************************
函数名称: inc_file_copy
函数功能: 文件拷贝函数，将源文件内容拷贝到目的文件中
输入参数: source_file_name -- 源文件名
          dest_file_name   -- 目的文件各
输出参数: 无
返回值  ：正常返回0，被信号中断返回-1
**************************************************************/
void inc_file_copy(char *source_file_name, char *dest_file_name);


/*************************************************************
函数名称: inc_file_read_integer
函数功能: 从文件中读一个整数，主要用于操作sys下的硬件相关文件
输入参数: file_name -- 文件名
          number    -- 用于存放读到的数据
输出参数: 无
返回值  ：-1读取失败，0读取成功
**************************************************************/
int inc_file_read_integer(char *file_name, int *number);


/*************************************************************
函数名称: inc_file_write_integer
函数功能: 向文件中写入一个整数，主要用于操作sys下的硬件相关文件
输入参数: file_name -- 文件名
          number    -- 要写入的整数
输出参数: 无
返回值  ：无
**************************************************************/
void inc_file_write_integer(char *file_name, int number);


/*************************************************************
函数名称: inc_file_write_string
函数功能: 向文件中写入一个字符串，主要用于操作sys下的硬件相关文件
输入参数: file_name -- 文件名
          string    -- 要写入的字符串
输出参数: 无
返回值  ：无
**************************************************************/
void inc_file_write_string(char *file_name, char *string);


/*************************************************************
函数名称: inc_file_read_string
函数功能: 从文件中读一个字符串
输入参数: file_name -- 文件名
          string    -- 存放读取的字符串
          len       -- string缓冲区的长度
          line_number -- 读取的行号
输出参数: 无
返回值  ：无
**************************************************************/
void inc_file_read_string(char *file_name, char *string, int len, int line_number);


/*************************************************************
函数名称: inc_wdt_login
函数功能: 向看门狗任务注册
输入参数: u32_task_id -- 任务ID，看文件IncDogMsg.h中的定义
          u32_timeout -- 超时值，单位S
输出参数: 无
返回值  ：无
**************************************************************/
void inc_wdt_login(U32_T u32_task_id, U32_T u32_timeout);


/*************************************************************
函数名称: inc_wdt_feed
函数功能: 喂狗
输入参数: u32_task_id -- 任务ID，看文件IncDogMsg.h中的定义
          u32_timeout -- 超时值，单位S
输出参数: 无
返回值  ：无
**************************************************************/
void inc_wdt_feed(U32_T u32_task_id, U32_T u32_timeout);


/*************************************************************
函数名称: inc_shell_cmd_execute
函数功能: shell命令执行
输入参数: cmd -- 命令字符串
输出参数: 无
返回值  ：0正常，-1失败
**************************************************************/
int inc_shell_cmd_execute(const char * cmd);

/*************************************************************
函数名称: u32_inc_get_system_time_ms
函数功能: 获取系统上电运行已来的毫秒时间
输入参数: 无
输出参数: 无
返回值  ：运行时间，单位ms
**************************************************************/
U32_T u32_inc_get_system_time_ms(void);

/*************************************************************
函数名称: u32_inc_get_diff_time_ms
函数功能: 计算时间差
输入参数: pu32_last_time          -- 上一次时间
输出参数: 无
返回值  ：时间差值，单位ms
**************************************************************/
U32_T u32_inc_get_diff_time_ms(U32_T *pu32_last_time);


#ifdef __cplusplus
}
#endif

#endif
